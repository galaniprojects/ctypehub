---
import { fn, Op } from 'sequelize';

import containerStyles from '../components/Container.module.css';
import inputStyles from '../components/Input/Input.module.css';
import buttonStyles from '../components/Button.module.css';

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header/Header.astro';

import CTypeOverview from '../components/CTypeOverview/CTypeOverview.astro';
import { paginate } from '../utilities/paginate';

const query = Astro.url.searchParams.get('query');
const where = {
  block: { [Op.ne]: null },
  ...(query && {
    search: { [Op.match]: fn('websearch_to_tsquery', 'english', query) },
  }),
};

const {
  data,
  currentPage,
  url: { prev, next },
} = await paginate(Astro.url, where);
---

<Layout>
  <Header />

  <search>
    <form action="/" method="get" class={containerStyles.container}>
      <input
        type="search"
        name="query"
        value={query}
        placeholder="Search query"
        aria-label="Search query"
        autofocus={!!query}
        class={inputStyles.search}
      /><button type="submit" class={buttonStyles.search}>Search</button>
    </form>

    {query && data.length === 0 && <p>No results for “{query}”</p>}

    {
      data.length > 0 && (
        <ul>
          {data.map(({ dataValues }) => (
            <CTypeOverview cTypeData={dataValues} />
          ))}
        </ul>
      )
    }

    {
      (prev || next) && (
        <nav>
          {next && (
            <a class="newer" href={next} rel="next">
              Newer
            </a>
          )}
          {next && <p class="page">Page {currentPage}</p>}
          {prev && (
            <a class="older" href={prev} rel="prev">
              Older
            </a>
          )}
        </nav>
      )
    }
  </search>
</Layout>

<style>
  search {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding-block: 1rem;
  }

  p {
    color: var(--color-text-primary);
  }

  ul {
    width: 100%;
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  nav {
    display: grid;
    grid-template-columns: 1fr 6rem 1fr;
    gap: 1rem;
    align-items: center;
    margin-block: 1rem;
  }

  .page {
    grid-column: 2;
    text-align: center;
    margin: 0;
  }

  a {
    text-align: center;
    color: var(--color-link);
  }

  .newer {
    grid-column: 1;
  }

  .older {
    grid-column: 3;
  }
</style>
