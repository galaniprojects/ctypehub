---
import { fn, Op } from 'sequelize';

import containerStyles from '../components/Container.module.css';

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header/Header.astro';

import CTypeOverview from '../components/CTypeOverview/CTypeOverview.astro';
import PageNav from '../components/PageNav/PageNav.astro';
import SearchForm from '../components/SearchForm/SearchForm.astro';
import { paginate } from '../utilities/paginate';
import { Tag } from '../models/tag';
import { generatePath, paths } from '../paths';

const query = Astro.url.searchParams.get('query');

const tagResults = await Tag.findAll({
  where: {
    search: {
      [Op.match]: fn('websearch_to_tsquery', 'english', query),
    },
  },
  attributes: ['tagName'],
  group: ['tagName'],
});

const where = {
  block: { [Op.ne]: null },
  ...(query && {
    search: { [Op.match]: fn('websearch_to_tsquery', 'english', query) },
  }),
};

const {
  data: cTypeResults,
  currentPage,
  url: { prev, next },
} = await paginate(Astro.url, where);
---

<Layout>
  <Header />

  <search class={containerStyles.search}>
    <SearchForm action="/" query={query} />

    {query && tagResults.length === 0 && <p>No tag results for “#{query}”</p>}
    {
      tagResults.length > 0 && (
        <Fragment>
          <p>Tag results for “#{query}”:</p>

          <ul class="tagResults">
            {tagResults.map(({ dataValues: { tagName } }) => (
              <li>
                <a href={generatePath(paths.tag, tagName)}>#{tagName}</a>
              </li>
            ))}
          </ul>
        </Fragment>
      )
    }

    {
      query && cTypeResults.length === 0 && (
        <p>No CType results for “{query}”</p>
      )
    }
    {
      cTypeResults.length > 0 && (
        <Fragment>
          {query && <p>CType results for “{query}”:</p>}
          <ul class="cTypeResults">
            {cTypeResults.map(({ dataValues }) => (
              <CTypeOverview cTypeData={dataValues} />
            ))}
          </ul>
        </Fragment>
      )
    }

    <PageNav prev={prev} next={next} currentPage={currentPage} />
  </search>
</Layout>

<style>
  p {
    color: var(--color-text-primary);
  }

  ul {
    width: 100%;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tagResults {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-block-end: 1rem;
  }

  .cTypeResults {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  a {
    text-align: center;
    color: var(--color-link);
  }
</style>
