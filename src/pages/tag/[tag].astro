---
import { Op, fn } from 'sequelize';

import CTypeOverview from '../../components/CTypeOverview/CTypeOverview.astro';
import { Tag } from '../../models/tag';
import { paginate } from '../../utilities/paginate';
import Layout from '../../layouts/Layout.astro';
import SearchForm from '../../components/SearchForm/SearchForm.astro';
import PageNav from '../../components/PageNav/PageNav.astro';
import { generatePath, paths } from '../../paths';
import { NotFoundResponse } from '../../utilities/NotFoundResponse';

const { tag } = Astro.params;

if (!tag) {
  return new NotFoundResponse();
}

const query = Astro.url.searchParams.get('query');

const where = {
  block: { [Op.ne]: null },
  ...(query && {
    search: { [Op.match]: fn('websearch_to_tsquery', 'english', query) },
  }),
};

const include = [{ model: Tag, as: 'tags', where: { tagName: tag } }];

const {
  data: cTypeResults,
  currentPage,
  url: { prev, next },
} = await paginate(Astro.url, where, include);

if (cTypeResults.length === 0) {
  return new NotFoundResponse();
}
---

<Layout>
  <search>
    <SearchForm
      action={generatePath(paths.tag, tag)}
      query={query}
      heading={`#${tag}`}
    />

    {
      cTypeResults.length > 0 && (
        <ul>
          {cTypeResults.map(({ dataValues }) => (
            <CTypeOverview cTypeData={dataValues} />
          ))}
        </ul>
      )
    }

    {query && cTypeResults.length === 0 && <p>No results for “{query}”</p>}

    <PageNav prev={prev} next={next} currentPage={currentPage} />
  </search>
</Layout>

<style>
  p,
  h2 {
    color: var(--color-text-primary);
    text-align: center;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  a {
    text-align: center;
    color: var(--color-link);
  }
</style>
