---
import type { CTypeData } from '../../models/ctype';

import { CType, ConfigService, Did, DidUri } from '@kiltprotocol/sdk-js';

import containerStyles from '../Container.module.css';
import propertyStyles from './Property.module.css';

import { configuration } from '../../utilities/configuration';

import { generatePath, paths } from '../../paths';

import { Property } from './Property';

async function getWeb3NameForDid(did: DidUri): Promise<string | undefined> {
  const api = ConfigService.get('api');
  const didChain = await api.call.did.query(Did.toChain(did));
  if (didChain.isNone) {
    return;
  }
  const { web3Name } = Did.linkedInfoFromChain(didChain);
  return web3Name;
}

interface Props {
  cTypeData: CTypeData;
}

const {
  title,
  creator,
  properties,
  createdAt,
  description,
  extrinsicHash,
  schema,
  attestationsCount,
  tags,
} = Astro.props.cTypeData;

const tagNames = tags?.map(({ dataValues }) => dataValues.tagName);

const web3Name = await getWeb3NameForDid(creator);

const schemaV1 = CType.fromProperties('', {}).$schema;
const version = schema === schemaV1 ? 'V1' : 'draft-01';
const kiltCType = CType.fromProperties(title, properties, version);

const { subscan } = configuration;
---

<section class={containerStyles.container}>
  <h1 class="title">{title}</h1>

  <fieldset>
    <legend>Creator</legend>
    {
      web3Name ? (
        <a href={`https://w3n.id/${web3Name}`}>w3n:{web3Name}</a>
      ) : (
        <p>{creator}</p>
      )
    }
  </fieldset>

  <fieldset>
    <legend>Number of attestations</legend>
    <p>{attestationsCount}</p>
  </fieldset>

  {
    description && (
      <fieldset>
        <legend>Description:</legend>
        <p>{description}</p>
      </fieldset>
    )
  }

  <fieldset>
    <legend>Creation date</legend>
    <time datetime={createdAt.toISOString()}>
      {createdAt.toLocaleString()}
    </time>
  </fieldset>

  {
    Object.entries(properties).map(([name, value], index) => (
      <fieldset>
        <legend>{`Property ${index + 1}`}</legend>
        <dl>
          <dt class={propertyStyles.term}>Name:</dt>
          <dd class={propertyStyles.definition}>{name}</dd>
          <Property value={value} />
        </dl>
      </fieldset>
    ))
  }

  <fieldset>
    <legend>Extrinsic</legend>

    <a
      href={`https://${subscan.network}.subscan.io/extrinsic/${extrinsicHash}`}
    >
      {extrinsicHash}
    </a>
  </fieldset>

  {
    tagNames && tagNames.length > 0 && (
      <fieldset>
        <legend>Tags</legend>
        <ul>
          {tagNames.map((tagName) => (
            <li>
              <a href={generatePath(paths.tag, tagName)}>#{tagName}</a>
            </li>
          ))}
        </ul>
      </fieldset>
    )
  }

  <fieldset>
    <legend>Technical Details</legend>
    <div id="details">
      <pre>{JSON.stringify(kiltCType, null, 2)}</pre>
    </div>
  </fieldset>
</section>

<style>
  section {
    padding: 1.25rem;
  }

  pre {
    margin: 0;
  }

  fieldset {
    border: 2px solid var(--color-background-primary);
    border-radius: var(--border-radius);
    margin-block-start: 1rem;
    margin-inline: 0;
    padding: 0 0.75rem;
    min-inline-size: 0;
  }

  legend {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    padding-inline: 0.5rem;
  }

  h1 {
    font-size: 1.375rem;
    margin: 0 0 1.25rem;
    color: var(--color-text-secondary);
    overflow-wrap: anywhere;
  }

  p,
  a,
  time {
    font-size: 0.875rem;
    display: block;
  }

  p {
    color: var(--color-text-primary);
    overflow-wrap: anywhere;
  }

  a {
    color: var(--color-link);
    padding-block: 1rem;
    overflow-wrap: anywhere;
    text-decoration: none;
  }

  time {
    color: var(--color-text-primary);
    margin-block: 1rem;
  }

  #details {
    color: #b0d5fb;
    background: rgba(var(--color-black-rgb) / 60%);
    border: 1px solid rgba(147 222 141 / 30%);
    overflow: auto;
    font-size: 0.75rem;
    padding: 0.75rem;
    margin-block: 0.5rem;
    border-radius: var(--border-radius);
  }

  ul {
    list-style: none;
    margin: 0.75rem 0;
    padding-inline: 0;
  }

  li {
    display: inline-block;
    margin-inline-end: 0.25rem;
  }

  li a {
    display: inline-block;
    padding-block: 0.25rem;
  }

  a:active {
    background: var(--color-background-active);
  }

  @media screen and (width >= 600px) {
    section {
      padding: 1.75rem;
    }

    h1 {
      margin: 0 0 1.75rem;
    }

    p,
    a,
    legend,
    time {
      font-size: 1rem;
    }

    fieldset > *:not(legend) {
      padding-inline-start: 2rem;
    }

    #details {
      padding-inline-start: 2rem;
    }
  }

  @media screen and (width >= 1000px) {
    section {
      padding: 2.5rem;
    }

    a:active {
      background: revert;
    }

    a:hover,
    a:focus {
      text-decoration: underline;
    }
  }
</style>
